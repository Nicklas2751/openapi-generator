/*
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.auth;

import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0-SNAPSHOT")
public class HttpBasicAuth implements Authentication {
  private static final String USERNAME_PASSWORD_SEPARATOR = ":";
  private static final String AUTHORIZATION_HEADER = "Authorization";
  private static final String BASIC_AUTH_KEYWORD = "Basic";
  private String username;
  private String password;

  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  @Override
  public void applyToParams(HttpRequest.Builder requestBuilder, HttpClient httpClient) {
    if (username == null && password == null) {
      return;
    }

    String str = (username == null ? "" : username) + USERNAME_PASSWORD_SEPARATOR + (password == null ? "" : password);
    requestBuilder.header(AUTHORIZATION_HEADER, BASIC_AUTH_KEYWORD + " " + Base64.getEncoder().encodeToString(str.getBytes(StandardCharsets.UTF_8)));
  }

}
